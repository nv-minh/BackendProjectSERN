{"ast":null,"code":"import axiosConfig from '../axiosConfig';\nexport const apiRegister = async payload => {\n  try {\n    const response = await axiosConfig({\n      method: 'post',\n      url: '/api/v1/auth/register',\n      data: payload\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const apiLogin = async payload => {\n  try {\n    const response = await axiosConfig({\n      method: 'post',\n      url: '/api/v1/auth/login',\n      data: payload\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axiosConfig","apiRegister","payload","response","method","url","data","error","console","log","apiLogin"],"sources":["/media/minhnv/Working/Coding/ProjectSERN/client/src/services/auth.ts"],"sourcesContent":["import axiosConfig from '../axiosConfig';\nimport { IUser } from '../interface/User';\n\nexport const apiRegister = async (payload: IUser) => {\n  try {\n    const response = await axiosConfig({\n      method: 'post',\n      url: '/api/v1/auth/register',\n      data: payload,\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const apiLogin = async (payload: IUser) => {\n  try {\n    const response = await axiosConfig({\n      method: 'post',\n      url: '/api/v1/auth/login',\n      data: payload,\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAGxC,OAAO,MAAMC,WAAW,GAAG,MAAOC,OAAc,IAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAAC;MACjCI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,uBAAuB;MAC5BC,IAAI,EAAEJ;IACR,CAAC,CAAC;IACF,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAG,MAAOR,OAAc,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAAC;MACjCI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,oBAAoB;MACzBC,IAAI,EAAEJ;IACR,CAAC,CAAC;IACF,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}