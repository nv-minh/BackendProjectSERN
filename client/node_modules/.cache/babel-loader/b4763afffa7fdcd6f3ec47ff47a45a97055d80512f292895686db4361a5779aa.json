{"ast":null,"code":"import axios from 'axios';\n// require(\"dotenv\").config();\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n// Add a request interceptor\ninstance.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem('persist:auth');\n\n  // Do something before request is sent\n  return config;\n}, async error => {\n  // Do something with request error\n  console.log(error);\n  return await Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","accessToken","localStorage","getItem","error","console","log","Promise","reject"],"sources":["/media/minhnv/Working/Coding/ProjectSERN/client/src/axiosConfig.ts"],"sourcesContent":["import axios from 'axios';\n// require(\"dotenv\").config();\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000',\n});\n// Add a request interceptor\ninstance.interceptors.request.use(\n  (config) => {\n    const accessToken = localStorage.getItem('persist:auth');\n\n    // Do something before request is sent\n    return config;\n  },\n  async (error) => {\n    // Do something with request error\n    console.log(error);\n    return await Promise.reject(error);\n  },\n);\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;AACF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;EAExD;EACA,OAAOH,MAAM;AACf,CAAC,EACD,MAAOI,KAAK,IAAK;EACf;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAO,MAAMG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AACpC,CAAC,CACF;AACD,eAAeV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}