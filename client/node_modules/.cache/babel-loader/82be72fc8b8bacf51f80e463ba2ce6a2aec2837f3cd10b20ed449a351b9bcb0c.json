{"ast":null,"code":"import actionType from './actionType';\nimport { apiRegister, apiLogin } from '../../services/auth';\n// TODO change interface dispatch later\n\nexport const register = payload => async dispatch => {\n  try {\n    const response = await apiRegister(payload);\n    if ((response === null || response === void 0 ? void 0 : response.data.success) === true) {\n      dispatch({\n        type: actionType.REGISTER_SUCCESS,\n        data: response === null || response === void 0 ? void 0 : response.data.accessToken\n      });\n    } else {\n      dispatch({\n        type: actionType.REGISTER_FAIL,\n        data: response === null || response === void 0 ? void 0 : response.data.message\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: actionType.REGISTER_FAIL,\n      data: null\n    });\n  }\n};\nexport const login = payload => async dispatch => {\n  try {\n    const response = await apiLogin(payload);\n    if ((response === null || response === void 0 ? void 0 : response.data.success) === true) {\n      dispatch({\n        type: actionType.LOGIN_SUCCESS,\n        data: response === null || response === void 0 ? void 0 : response.data.accessToken\n      });\n    } else {\n      dispatch({\n        type: actionType.LOGIN_FAIL,\n        data: response === null || response === void 0 ? void 0 : response.data.message\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: actionType.LOGIN_FAIL,\n      data: null\n    });\n  }\n};\nexport const logout = () => ({\n  type: actionType.LOGOUT\n});","map":{"version":3,"names":["actionType","apiRegister","apiLogin","register","payload","dispatch","response","data","success","type","REGISTER_SUCCESS","accessToken","REGISTER_FAIL","message","error","login","LOGIN_SUCCESS","LOGIN_FAIL","logout","LOGOUT"],"sources":["/media/minhnv/Working/Coding/ProjectSERN/client/src/store/actions/auth.ts"],"sourcesContent":["import actionType from './actionType';\nimport { apiRegister, apiLogin } from '../../services/auth';\nimport { IUser } from '../../interface/User';\n\n// TODO change interface dispatch later\n\nexport const register = (payload: IUser) => async (dispatch: any) => {\n  try {\n    const response = await apiRegister(payload);\n    if (response?.data.success === true) {\n      dispatch({\n        type: actionType.REGISTER_SUCCESS,\n        data: response?.data.accessToken,\n      }) as unknown as any;\n    } else {\n      dispatch({\n        type: actionType.REGISTER_FAIL,\n        data: response?.data.message,\n      }) as unknown as any;\n    }\n  } catch (error) {\n    dispatch({\n      type: actionType.REGISTER_FAIL,\n      data: null,\n    }) as unknown as any;\n  }\n};\n\nexport const login = (payload: IUser) => async (dispatch: any) => {\n  try {\n    const response = await apiLogin(payload);\n    if (response?.data.success === true) {\n      dispatch({\n        type: actionType.LOGIN_SUCCESS,\n        data: response?.data.accessToken,\n      }) as unknown as any;\n    } else {\n      dispatch({\n        type: actionType.LOGIN_FAIL,\n        data: response?.data.message,\n      }) as unknown as any;\n    }\n  } catch (error) {\n    dispatch({\n      type: actionType.LOGIN_FAIL,\n      data: null,\n    }) as unknown as any;\n  }\n};\n\nexport const logout = () => ({\n  type: actionType.LOGOUT,\n});\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,qBAAqB;AAG3D;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAc,IAAK,MAAOC,QAAa,IAAK;EACnE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,WAAW,CAACG,OAAO,CAAC;IAC3C,IAAI,CAAAE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,IAAI,CAACC,OAAO,MAAK,IAAI,EAAE;MACnCH,QAAQ,CAAC;QACPI,IAAI,EAAET,UAAU,CAACU,gBAAgB;QACjCH,IAAI,EAAED,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,IAAI,CAACI;MACvB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLN,QAAQ,CAAC;QACPI,IAAI,EAAET,UAAU,CAACY,aAAa;QAC9BL,IAAI,EAAED,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,IAAI,CAACM;MACvB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPI,IAAI,EAAET,UAAU,CAACY,aAAa;MAC9BL,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMQ,KAAK,GAAIX,OAAc,IAAK,MAAOC,QAAa,IAAK;EAChE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACE,OAAO,CAAC;IACxC,IAAI,CAAAE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,IAAI,CAACC,OAAO,MAAK,IAAI,EAAE;MACnCH,QAAQ,CAAC;QACPI,IAAI,EAAET,UAAU,CAACgB,aAAa;QAC9BT,IAAI,EAAED,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,IAAI,CAACI;MACvB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLN,QAAQ,CAAC;QACPI,IAAI,EAAET,UAAU,CAACiB,UAAU;QAC3BV,IAAI,EAAED,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,IAAI,CAACM;MACvB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPI,IAAI,EAAET,UAAU,CAACiB,UAAU;MAC3BV,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMW,MAAM,GAAG,OAAO;EAC3BT,IAAI,EAAET,UAAU,CAACmB;AACnB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}