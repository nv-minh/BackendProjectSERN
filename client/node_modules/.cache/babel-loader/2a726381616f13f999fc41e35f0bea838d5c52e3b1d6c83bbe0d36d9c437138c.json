{"ast":null,"code":"var _jsxFileName = \"/media/minhnv/Working/Coding/ProjectSERN/client/src/components/InputForm.tsx\";\nimport React, { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputForm = _ref => {\n  var _invalidFields$find;\n  let {\n    label,\n    typeInput,\n    value,\n    setValue,\n    type,\n    invalidFields\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"phone\",\n      className: \"text-xs\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: typeInput,\n      id: \"phone\",\n      className: \"outline-none bg-[#e8f0fe] p-2 rounded-md  w-full h-full\",\n      value: value,\n      onChange: event => setValue(prev => ({\n        ...prev,\n        [type]: event.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), invalidFields.length > 0 && invalidFields.some(field => field.name === type) && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"italic text-red-500\",\n      children: (_invalidFields$find = invalidFields.find(field => (field === null || field === void 0 ? void 0 : field.name) === type)) === null || _invalidFields$find === void 0 ? void 0 : _invalidFields$find.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n_c = InputForm;\nexport default _c2 = /*#__PURE__*/memo(InputForm);\nvar _c, _c2;\n$RefreshReg$(_c, \"InputForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","InputForm","label","typeInput","value","setValue","type","invalidFields","event","prev","target","length","some","field","name","find","message"],"sources":["/media/minhnv/Working/Coding/ProjectSERN/client/src/components/InputForm.tsx"],"sourcesContent":["import React, { memo, ChangeEvent } from 'react';\nimport { IInputFormProps } from '../interface/InputFormProps';\n\nconst InputForm = ({\n  label,\n  typeInput,\n  value,\n  setValue,\n  type,\n  invalidFields,\n}: IInputFormProps) => (\n  <div>\n    <label htmlFor=\"phone\" className=\"text-xs\">\n      {label}\n    </label>\n    <input\n      type={typeInput}\n      id=\"phone\"\n      className=\"outline-none bg-[#e8f0fe] p-2 rounded-md  w-full h-full\"\n      value={value}\n      onChange={(event: ChangeEvent<HTMLInputElement>) =>\n        setValue((prev) => ({\n          ...prev,\n          [type]: event.target.value,\n        }))\n      }\n    />\n\n    {invalidFields.length > 0 && invalidFields.some((field) => field.name === type) && (\n      <small className=\"italic text-red-500\">\n        {invalidFields.find((field) => field?.name === type)?.message}\n      </small>\n    )}\n  </div>\n);\n\nexport default memo(InputForm);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAqB,OAAO;AAAC;AAGjD,MAAMC,SAAS,GAAG;EAAA;EAAA,IAAC;IACjBC,KAAK;IACLC,SAAS;IACTC,KAAK;IACLC,QAAQ;IACRC,IAAI;IACJC;EACe,CAAC;EAAA,oBAChB;IAAA,wBACE;MAAO,OAAO,EAAC,OAAO;MAAC,SAAS,EAAC,SAAS;MAAA,UACvCL;IAAK;MAAA;MAAA;MAAA;IAAA,QACA,eACR;MACE,IAAI,EAAEC,SAAU;MAChB,EAAE,EAAC,OAAO;MACV,SAAS,EAAC,yDAAyD;MACnE,KAAK,EAAEC,KAAM;MACb,QAAQ,EAAGI,KAAoC,IAC7CH,QAAQ,CAAEI,IAAI,KAAM;QAClB,GAAGA,IAAI;QACP,CAACH,IAAI,GAAGE,KAAK,CAACE,MAAM,CAACN;MACvB,CAAC,CAAC;IACH;MAAA;MAAA;MAAA;IAAA,QACD,EAEDG,aAAa,CAACI,MAAM,GAAG,CAAC,IAAIJ,aAAa,CAACK,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAKR,IAAI,CAAC,iBAC7E;MAAO,SAAS,EAAC,qBAAqB;MAAA,iCACnCC,aAAa,CAACQ,IAAI,CAAEF,KAAK,IAAK,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,MAAKR,IAAI,CAAC,wDAAnD,oBAAqDU;IAAO;MAAA;MAAA;MAAA;IAAA,QAEhE;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAAA,CACP;AAAC,KA/BIf,SAAS;AAiCf,kCAAeD,IAAI,CAACC,SAAS,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}