[{"D:\\Coding\\ProjectSERN\\client\\src\\index.tsx":"1","D:\\Coding\\ProjectSERN\\client\\src\\redux.ts":"2","D:\\Coding\\ProjectSERN\\client\\src\\reportWebVitals.ts":"3","D:\\Coding\\ProjectSERN\\client\\src\\App.tsx":"4","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\constant.ts":"5","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\rootReducer.ts":"6","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Home.tsx":"7","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\index.tsx":"8","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\userReducer.ts":"9","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\authReducer.ts":"10","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Header.tsx":"11","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Navigation.tsx":"12","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Search.tsx":"13","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Login.tsx":"14","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Register.tsx":"15","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HomePage.tsx":"16","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ListOfNewpapers.tsx":"17","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\actionType.ts":"18","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\icons.ts":"19","D:\\Coding\\ProjectSERN\\client\\src\\services\\category.ts":"20","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\Common\\formatVietnameseToString.ts":"21","D:\\Coding\\ProjectSERN\\client\\src\\components\\SearchItem.tsx":"22","D:\\Coding\\ProjectSERN\\client\\src\\services\\auth.ts":"23","D:\\Coding\\ProjectSERN\\client\\src\\components\\InputForm.tsx":"24","D:\\Coding\\ProjectSERN\\client\\src\\components\\index.tsx":"25","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\index.ts":"26","D:\\Coding\\ProjectSERN\\client\\src\\axiosConfig.ts":"27","D:\\Coding\\ProjectSERN\\client\\src\\components\\Province.tsx":"28","D:\\Coding\\ProjectSERN\\client\\src\\components\\ProvinceButton.tsx":"29","D:\\Coding\\ProjectSERN\\client\\src\\components\\Button.tsx":"30","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\auth.ts":"31","D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemsNewpaper.tsx":"32","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\post.ts":"33","D:\\Coding\\ProjectSERN\\client\\src\\services\\post.ts":"34","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\postReducer.ts":"35","D:\\Coding\\ProjectSERN\\client\\src\\components\\PageNumber.tsx":"36","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Pagination.tsx":"37","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\DetailPost.tsx":"38","D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemSidebar.tsx":"39","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\app.ts":"40","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\appReducer.ts":"41","D:\\Coding\\ProjectSERN\\client\\src\\store\\interface.ts":"42","D:\\Coding\\ProjectSERN\\client\\src\\services\\index.ts":"43","D:\\Coding\\ProjectSERN\\client\\src\\components\\WhyUs.tsx":"44","D:\\Coding\\ProjectSERN\\client\\src\\components\\Contact.tsx":"45","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\WhyUsData.ts":"46","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\ContactData.ts":"47","D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemRelatedPost.tsx":"48","D:\\Coding\\ProjectSERN\\client\\src\\components\\RelatedPost.tsx":"49","D:\\Coding\\ProjectSERN\\client\\src\\components\\Modal.tsx":"50"},{"size":902,"mtime":1677607984146,"results":"51","hashOfConfig":"52"},{"size":431,"mtime":1676047855299,"results":"53","hashOfConfig":"52"},{"size":433,"mtime":1676047855299,"results":"54","hashOfConfig":"52"},{"size":1015,"mtime":1682671082686,"results":"55","hashOfConfig":"52"},{"size":1065,"mtime":1682264089671,"results":"56","hashOfConfig":"52"},{"size":829,"mtime":1682849965388,"results":"57","hashOfConfig":"52"},{"size":599,"mtime":1682672385800,"results":"58","hashOfConfig":"52"},{"size":504,"mtime":1682693126677,"results":"59","hashOfConfig":"52"},{"size":277,"mtime":1682242931596,"results":"60","hashOfConfig":"52"},{"size":1315,"mtime":1682246530172,"results":"61","hashOfConfig":"52"},{"size":2611,"mtime":1682671754356,"results":"62","hashOfConfig":"52"},{"size":2694,"mtime":1682673350481,"results":"63","hashOfConfig":"52"},{"size":3043,"mtime":1682883386535,"results":"64","hashOfConfig":"52"},{"size":4036,"mtime":1682242568274,"results":"65","hashOfConfig":"52"},{"size":4028,"mtime":1682242481944,"results":"66","hashOfConfig":"52"},{"size":2571,"mtime":1682852531048,"results":"67","hashOfConfig":"52"},{"size":2248,"mtime":1682746062886,"results":"68","hashOfConfig":"52"},{"size":436,"mtime":1682850627337,"results":"69","hashOfConfig":"52"},{"size":1106,"mtime":1676299682216,"results":"70","hashOfConfig":"52"},{"size":803,"mtime":1682850521607,"results":"71","hashOfConfig":"52"},{"size":193,"mtime":1676139612828,"results":"72","hashOfConfig":"52"},{"size":612,"mtime":1682242905377,"results":"73","hashOfConfig":"52"},{"size":540,"mtime":1682702763138,"results":"74","hashOfConfig":"52"},{"size":887,"mtime":1682242905959,"results":"75","hashOfConfig":"52"},{"size":646,"mtime":1682693167053,"results":"76","hashOfConfig":"52"},{"size":71,"mtime":1682234671121,"results":"77","hashOfConfig":"52"},{"size":497,"mtime":1676047855299,"results":"78","hashOfConfig":"52"},{"size":399,"mtime":1677608019057,"results":"79","hashOfConfig":"52"},{"size":543,"mtime":1682242905370,"results":"80","hashOfConfig":"52"},{"size":549,"mtime":1682242748283,"results":"81","hashOfConfig":"52"},{"size":1712,"mtime":1682247819500,"results":"82","hashOfConfig":"52"},{"size":4679,"mtime":1682706057548,"results":"83","hashOfConfig":"52"},{"size":1810,"mtime":1682850207176,"results":"84","hashOfConfig":"52"},{"size":723,"mtime":1682702712371,"results":"85","hashOfConfig":"52"},{"size":898,"mtime":1682850197324,"results":"86","hashOfConfig":"52"},{"size":1982,"mtime":1682851912795,"results":"87","hashOfConfig":"52"},{"size":2296,"mtime":1682850299071,"results":"88","hashOfConfig":"52"},{"size":79,"mtime":1682181072447,"results":"89","hashOfConfig":"52"},{"size":2697,"mtime":1682704554651,"results":"90","hashOfConfig":"52"},{"size":2342,"mtime":1682859874217,"results":"91","hashOfConfig":"52"},{"size":978,"mtime":1682850789148,"results":"92","hashOfConfig":"52"},{"size":1061,"mtime":1682248934328,"results":"93","hashOfConfig":"52"},{"size":76,"mtime":1682263906596,"results":"94","hashOfConfig":"52"},{"size":3114,"mtime":1682672357876,"results":"95","hashOfConfig":"52"},{"size":1080,"mtime":1682672435991,"results":"96","hashOfConfig":"52"},{"size":1476,"mtime":1682668059040,"results":"97","hashOfConfig":"52"},{"size":545,"mtime":1682665885248,"results":"98","hashOfConfig":"52"},{"size":1210,"mtime":1682709677990,"results":"99","hashOfConfig":"52"},{"size":688,"mtime":1682850321339,"results":"100","hashOfConfig":"52"},{"size":8299,"mtime":1682884144254,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"9h3l1x",{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"105"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"105"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"105"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\ProjectSERN\\client\\src\\index.tsx",[],[],[],"D:\\Coding\\ProjectSERN\\client\\src\\redux.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\reportWebVitals.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\App.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\constant.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\rootReducer.ts",["265","266"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Home.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\index.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\userReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\authReducer.ts",["267"],[],"import { IAuth } from '../../interface';\nimport actionType from '../actions/actionType';\nimport { AuthAction, RootStateAuth } from '../interface';\n\nconst initState: RootStateAuth = {\n  isLoggedIn: false,\n  accessToken: null,\n};\n\nconst authReducer = (state = initState, action: AuthAction) => {\n  switch (action.type) {\n    case actionType.REGISTER_SUCCESS:\n      return {\n        ...(state as object),\n        type: actionType.REGISTER_SUCCESS,\n        isLoggedIn: true,\n        accessToken: action.accessToken,\n      };\n    case actionType.REGISTER_FAIL:\n      return {\n        ...(state as object),\n        type: actionType.REGISTER_FAIL,\n        isLoggedIn: false,\n        accessToken: null,\n      };\n    case actionType.LOGIN_SUCCESS:\n      return {\n        ...(state as object),\n        type: actionType.LOGIN_SUCCESS,\n        isLoggedIn: true,\n        accessToken: action.accessToken,\n      };\n    case actionType.LOGIN_FAIL:\n      return {\n        ...(state as object),\n        type: actionType.LOGIN_FAIL,\n        isLoggedIn: false,\n        accessToken: null,\n      };\n    case actionType.LOGOUT:\n      return {\n        ...(state as object),\n        type: actionType.LOGOUT,\n        isLoggedIn: false,\n        accessToken: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Header.tsx",["268","269"],[],"import React, { useCallback, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Link, useLocation } from 'react-router-dom';\nimport logo from '../../assets/logowithoutbg.png';\nimport { Button } from '../../components';\nimport icons from '../../ultils/icons';\nimport path from '../../ultils/constant';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport Swal from 'sweetalert2';\n\nconst { FaPlusCircle } = icons;\nconst Header = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const headerRef = useRef<HTMLInputElement>(null);\n  const location = useLocation();\n  useEffect(() => {\n    if (headerRef) {\n      headerRef?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  }, [location]);\n\n  const { isLoggedIn } = useSelector((state: any) => state.auth);\n  const goLogin = useCallback((flag: string) => {\n    navigate(path.LOGIN, { state: { flag } });\n  }, []);\n\n  const goRegister = useCallback((flag: string) => {\n    navigate(path.REGISTER, { state: { flag } });\n  }, []);\n  return (\n    <div ref={headerRef} className=\"w-[70%]\">\n      <div className=\"flex items-center justify-around w-full\">\n        <Link to={path.HOME}>\n          <img src={logo} alt=\"logo\" className=\"w-[240px] h-[70px] object-contain\" />\n        </Link>\n        <div className=\"flex gap-1\">\n          <small className=\"pt-2\">Phongtro123.com xin chào!</small>\n          {!isLoggedIn && (\n            <>\n              <Button\n                text=\"Đăng Nhập\"\n                textColor=\"text-white\"\n                bgColor=\"!bg-[#3961fb]\"\n                onClick={() => goLogin('login')}\n              />\n              <Button\n                text=\"Đăng Ký\"\n                textColor=\"text-white\"\n                bgColor=\"!bg-[#3961fb]\"\n                onClick={() => goRegister('register')}\n              />\n            </>\n          )}\n          {isLoggedIn && (\n            <Button\n              text=\"Đăng Xuất\"\n              textColor=\"text-white\"\n              bgColor=\"!bg-[#3961fb]\"\n              onClick={() => {\n                dispatch(actions.logout() as unknown as any);\n                Swal.fire('Warning', 'Bạn sẽ đăng xuất!', 'warning');\n              }}\n            />\n          )}\n          <Button\n            text=\"Đăng Tin Mới\"\n            textColor=\"text-white\"\n            bgColor=\"!bg-secondary2\"\n            IcAfter={FaPlusCircle}\n            // onClick={goLogin}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Navigation.tsx",["270"],[],"import { useEffect, useState } from 'react';\nimport { formatVietnameseToString } from '../../ultils/Common/formatVietnameseToString';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { Dispatch } from 'redux';\nimport { CategoriesAction, PostsAction, RootState } from '../../store/interface';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  const dispatch: Dispatch<CategoriesAction> = useDispatch();\n  const { categories } = useSelector((state: RootState) => state.app);\n\n  useEffect(() => {\n    dispatch(actions.getCategories() as unknown as CategoriesAction);\n    const element = document.getElementById('navigation');\n\n    window.addEventListener('scroll', function () {\n      if (window.scrollY > 100) {\n        element?.classList.add('fixed');\n      }\n    });\n  }, []);\n  const [currentPage, setCurrentPage] = useState<string | undefined>('');\n  const onClickNavigate = (categoryCode?: string) => {\n    categoryCode ? setCurrentPage(categoryCode) : setCurrentPage('');\n    const page = 1;\n    categoryCode\n      ? dispatch(actions.getPostsLimit(+page, { categoryCode }) as unknown as PostsAction)\n      : dispatch(actions.getPostsLimit(+page, {}) as unknown as PostsAction);\n  };\n  return (\n    <div className=\"navigation w-full h-[40px] bg-secondary1 text-white  top-0 border-0 overflow-y-scroll overflow-x-hidden z-10 sticky\">\n      <div className=\"flex justify-center w-full h-full font-medium m-text-sm auto\">\n        <div\n          className={\n            '' === currentPage\n              ? 'flex items-center justify-center w-20 h-full bg-secondary2'\n              : 'flex items-center justify-center w-20 h-full '\n          }\n        >\n          <NavLink to={'/'} onClick={() => onClickNavigate()}>\n            Trang chủ\n          </NavLink>\n        </div>\n        {categories &&\n          categories?.length > 0 &&\n          categories.map((item) => {\n            return (\n              <div\n                key={item.code}\n                className={\n                  item.code === currentPage\n                    ? `flex items-center justify-center h-full px-3 py-0 hover:bg-secondary2 bg-secondary2`\n                    : 'flex items-center justify-center h-full px-3 py-0 hover:bg-secondary2'\n                }\n              >\n                <NavLink\n                  to={formatVietnameseToString(item.value)}\n                  onClick={() => onClickNavigate(item.code)}\n                >\n                  {item.value}\n                </NavLink>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Search.tsx",["271","272"],[],"import SearchItem from '../../components/SearchItem';\nimport icons from '../../ultils/icons';\nimport React, { memo, useState } from 'react';\nimport { Modal } from '../../components/Modal';\nimport { useSelector } from 'react-redux';\nimport { ICategories, RootState } from '../../store/interface';\n\nconst {\n  BsChevronRight,\n  HiOutlineLocationMarker,\n  TbReportMoney,\n  RiCrop2Line,\n  MdOutlineHouseSiding,\n  FiSearch,\n} = icons;\nconst Search = () => {\n  const [isShowModal, setIsShowModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('');\n  const [content, setContent] = useState<any>([]);\n  const { provinces, prices, areas, categories } = useSelector(\n    (state: RootState) => state.app,\n  );\n\n  const handleShowModal = (title: string, content: any, name: string) => {\n    setTitle(title);\n    setName(name);\n    setContent(content);\n    setIsShowModal(true);\n  };\n  return (\n    <>\n      <div className=\"h-[55px] p-[10px] bg-[#febb02] rounded-lg flex items-center justify-around gap-2\">\n        <span\n          className=\"flex-1 cursor-pointer \"\n          onClick={() =>\n            handleShowModal('categories', categories, 'Chọn loại bất động sản')\n          }\n        >\n          <SearchItem\n            text={'Phòng trọ, nhà trọ'}\n            IconBefore={MdOutlineHouseSiding}\n            IconAfter={BsChevronRight}\n            fontWeight={'font-medium text-black'}\n          />\n        </span>\n        <span\n          className=\"flex-1 cursor-pointer\"\n          onClick={() => handleShowModal('provinces', provinces, 'Chọn tỉnh thành')}\n        >\n          <SearchItem\n            text={'Toàn quốc'}\n            IconBefore={HiOutlineLocationMarker}\n            IconAfter={BsChevronRight}\n          />\n        </span>\n        <span\n          className=\"flex-1 cursor-pointer\"\n          onClick={() => handleShowModal('prices', prices, 'Chọn mức giá')}\n        >\n          <SearchItem\n            text={'Chọn giá'}\n            IconBefore={TbReportMoney}\n            IconAfter={BsChevronRight}\n          />\n        </span>\n        <span\n          className=\"flex-1 cursor-pointer\"\n          onClick={() => handleShowModal('areas', areas, 'Chọn diện tích')}\n        >\n          <SearchItem\n            text={'Chọn diện tích'}\n            IconBefore={RiCrop2Line}\n            IconAfter={BsChevronRight}\n          />\n        </span>\n        <span className=\"flex-1 cursor-pointer\" onClick={() => setIsShowModal(true)}>\n          <button\n            type=\"button\"\n            className=\"flex items-center justify-center w-full px-4 py-2 text-sm text-white bg-blue-100 rounded-md outline-non\"\n          >\n            <FiSearch />\n            Tìm Kiếm\n          </button>\n        </span>\n      </div>\n      {isShowModal && (\n        <Modal\n          setIsShowModal={setIsShowModal}\n          title={title}\n          content={content}\n          key={content.code}\n          name={name}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Search;\n",[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Login.tsx",["273"],[],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from '../../components';\nimport InputForm from '../../components/InputForm';\nimport path from '../../ultils/constant';\nimport { apiLogin } from '../../services/auth';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { useNavigate } from 'react-router';\nimport { IUser } from './../../interface';\nimport { useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nconst Login = () => {\n  const [loginForm, setLoginForm] = useState({\n    userName: '',\n    phone: '',\n    password: '',\n  });\n  const [invalidFields, setInvalidFields] = useState<Array<Object>>([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { update } = useSelector((state: any) => state.auth);\n\n  const validate = (loginForm: IUser) => {\n    let invalid = 0;\n    let fields = Object.entries(loginForm);\n\n    fields.slice(1).forEach((field) => {\n      if (field[1] === '') {\n        setInvalidFields((previous) => [\n          ...previous,\n          {\n            name: field[0],\n            message: 'Bạn không được bỏ trống trường này!',\n          },\n        ]);\n        invalid++;\n      }\n    });\n    fields.slice(1).forEach((field) => {\n      switch (field[0]) {\n        case 'password':\n          if (field[1].length < 6) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Mật khẩu phải có tối thiểu 6 kí tự!',\n              },\n            ]);\n            invalid++;\n          }\n          break;\n        case 'phone':\n          if (!+field[1]) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Số điện thoại không hợp lệ!',\n              },\n            ]);\n            invalid++;\n          }\n      }\n    });\n    return invalid;\n  };\n  const handleClickButton = async () => {\n    try {\n      let invalids = await validate(loginForm);\n      if (invalids === 0) {\n        const loginData = await apiLogin(loginForm);\n        dispatch(actions.login(loginForm) as unknown as any);\n        if (loginData?.data.success === true) {\n          Swal.fire('successfully!', loginData?.data.message, 'success');\n          navigate('/');\n          setLoginForm({ userName: '', phone: '', password: '' });\n        } else {\n          loginData?.data.message &&\n            Swal.fire('Oops !', loginData?.data.message, 'error');\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"bg-white w-[600px] max-w-600 p-[30px] pb-[100px] rounded-md shadow-sm start\">\n      <h3 className=\"mb-3 text-2xl font-semibold\">Đăng nhập</h3>\n      <div className=\"flex flex-col w-full gap-5\">\n        <InputForm\n          label={'Số Điện Thoại'}\n          typeInput={'text'}\n          value={loginForm.phone}\n          type={'phone'}\n          setValue={setLoginForm}\n          invalidFields={invalidFields}\n        />\n        <InputForm\n          label={'Mật Khẩu'}\n          typeInput={'password'}\n          type={'password'}\n          value={loginForm.password}\n          setValue={setLoginForm}\n          invalidFields={invalidFields}\n        />\n        <Button\n          text=\"Đăng Nhập\"\n          textColor=\"text-white\"\n          bgColor=\"!bg-secondary1\"\n          fullWidth\n          onClick={() => {\n            handleClickButton();\n          }}\n        />\n      </div>\n      <div className=\"flex justify-between mt-7\">\n        <small className=\"text-[blue] hover:text-[red] cursor-pointer\">\n          Bạn Quên Mật Khẩu\n        </small>\n        <NavLink to={'/' + path.REGISTER}>\n          <small className=\"text-[blue] hover:text-[red] cursor-pointer\">\n            Tạo Tài Khoản Mới\n          </small>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Register.tsx",["274"],[],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button, InputForm } from '../../components';\nimport path from '../../ultils/constant';\nimport { apiRegister } from '../../services/auth';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { useNavigate } from 'react-router';\nimport { IUser } from '../../interface';\n\nconst Register = () => {\n  const [registerForm, setRegisterForm] = useState<IUser>({\n    userName: '',\n    phone: '',\n    password: '',\n  });\n  const [invalidFields, setInvalidFields] = useState<Array<Object>>([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const validate = (loginForm: IUser) => {\n    let invalid = 0;\n    let fields = Object.entries(loginForm);\n    fields.slice(1).forEach((field) => {\n      if (field[1] === '')\n        setInvalidFields((previous) => [\n          ...previous,\n          {\n            name: field[0],\n            message: 'Bạn không được bỏ trống trường này!',\n          },\n        ]);\n      invalid++;\n    });\n    fields.slice(1).forEach((field) => {\n      switch (field[0]) {\n        case 'password':\n          if (field[1].length < 6) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Mật khẩu phải có tối thiểu 6 kí tự!',\n              },\n            ]);\n            invalid++;\n          }\n          break;\n        case 'phone':\n          if (!+field[1]) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Số điện thoại không hợp lệ!',\n              },\n            ]);\n            invalid++;\n          }\n      }\n    });\n\n    return invalid;\n  };\n  const handleClickButton = async () => {\n    try {\n      const registerData = await apiRegister(registerForm);\n      dispatch(actions.register(registerForm) as unknown as any);\n      if (registerData?.data.success === true) {\n        setRegisterForm({ userName: '', phone: '', password: '' });\n        alert('Chúc mừng bạn đã đăng ký thành công');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"bg-white w-[600px] max-w-600 p-[30px] pb-[100px] rounded-md shadow-sm\">\n      <h3 className=\"mb-3 text-2xl font-semibold\">Đăng Ký Tài Khoản</h3>\n      <div className=\"flex flex-col w-full gap-5\">\n        <InputForm\n          label={'Họ tên'}\n          typeInput={'text'}\n          type={'userName'}\n          value={registerForm.userName}\n          setValue={setRegisterForm}\n          invalidFields={invalidFields}\n        />\n        <InputForm\n          label={'Số Điện Thoại'}\n          typeInput={'number'}\n          type={'phone'}\n          value={registerForm.phone}\n          setValue={setRegisterForm}\n          invalidFields={invalidFields}\n        />\n        <InputForm\n          label={'Tạo Mật Khẩu'}\n          typeInput={'password'}\n          type={'password'}\n          value={registerForm.password}\n          setValue={setRegisterForm}\n          invalidFields={invalidFields}\n        />\n        <Button\n          text=\"Tạo Tài Khoản\"\n          textColor=\"text-white\"\n          bgColor=\"!bg-secondary1\"\n          fullWidth\n          onClick={handleClickButton}\n        />\n      </div>\n      <div className=\"flex flex-col mt-7\">\n        <small className=\" hover:text-[red] cursor-pointer\">\n          Bấm vào nút đăng ký tức là bạn đã đồng ý với quy định sử dụng của chúng tôi\n        </small>\n        <small className=\"flex hover:text-[red] cursor-pointer mt-5\">\n          Bạn đã có tài khoản ?{' '}\n          <NavLink to={'/' + path.LOGIN}>\n            <p className=\"text-[blue] ml-1\"> Đăng nhập ngay</p>\n          </NavLink>\n        </small>\n      </div>\n    </div>\n  );\n};\nexport default Register;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HomePage.tsx",["275"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ListOfNewpapers.tsx",["276","277","278","279"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport { Button, ItemsNewpaper } from '../../components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPostsLimit } from '../../store/actions/post';\nimport { PostsAction, RootState } from '../../store/interface';\nimport { useSearchParams } from 'react-router-dom';\nimport { IPost } from '../../interface';\n\ninterface prop {\n  queryPage: string;\n}\n\nconst ListOfNewpapers = (prop: prop) => {\n  const dispatch = useDispatch();\n  const { posts } = useSelector((state: RootState) => state.posts);\n  // const listRef = useRef<HTMLInputElement>(null);\n  console.log(posts);\n  useEffect(() => {\n    dispatch(getPostsLimit(+prop.queryPage, {}) as unknown as PostsAction);\n    // if (listRef) {\n    //   listRef?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    //\n  }, []);\n  return (\n    <div className=\"p-2\">\n      <div className=\"flex items-center justify-between \">\n        <h4 className=\"text-base font-medium\">Danh sách tin đăng</h4>\n        <span className=\"text-xs\">Cập nhật: 12:05 25/08/2022</span>\n      </div>\n      <div className=\"flex items-center gap-1 py-2 text-xs\">\n        <span className=\"text-sm\">Sắp xếp</span>\n        <Button\n          text=\"Mặc định\"\n          textColor=\"text-black\"\n          bgColor=\"!bg-[#f1f1f1]\"\n          size=\"h-[25px] w-[110px]\"\n        />\n        <Button\n          text=\"Mới nhất\"\n          textColor=\"text-black\"\n          bgColor=\"!bg-[#f1f1f1]\"\n          size=\"h-[25px] w-[100px]\"\n        />\n      </div>\n      <div className=\"flex flex-col\">\n        {posts &&\n          posts?.length > 0 &&\n          posts.map((item: IPost) => {\n            const obj = JSON.parse(item.images.image);\n            return (\n              <ItemsNewpaper\n                key={item?.id}\n                images={obj}\n                address={item.address}\n                attributes={item.attributes}\n                title={item.title}\n                description={item.description ? JSON.parse(item.description) : ''}\n                user={item.user}\n                star={item.star}\n                id={item?.id}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default ListOfNewpapers;\n","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\actionType.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\icons.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\category.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\Common\\formatVietnameseToString.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\SearchItem.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\auth.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\InputForm.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\index.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\index.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\axiosConfig.ts",["280"],[],"import axios from 'axios';\n// require(\"dotenv\").config();\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000',\n});\n// Add a request interceptor\ninstance.interceptors.request.use(\n  (config) => {\n    const accessToken = localStorage.getItem('persist:auth');\n\n    // Do something before request is sent\n    return config;\n  },\n  async (error) => {\n    // Do something with request error\n    console.log(error);\n    return await Promise.reject(error);\n  },\n);\nexport default instance;\n","D:\\Coding\\ProjectSERN\\client\\src\\components\\Province.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ProvinceButton.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\Button.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\auth.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemsNewpaper.tsx",["281","282","283"],[],"import React, { memo, useCallback, useState } from 'react';\nimport icons from '../ultils/icons';\nimport { IPost } from '../interface';\nimport { useNavigate, Link } from 'react-router-dom';\nimport path from '../ultils/constant';\nimport { formatVietnameseToString } from '../ultils/Common/formatVietnameseToString';\n\nconst indexs = [0, 1, 2, 3];\nconst { GrStar, RiHeartFill, RiHeartLine, BsBookmarkStarFill } = icons;\nconst ItemsNewpaper = ({\n  images,\n  user,\n  title,\n  star,\n  description,\n  attributes,\n  address,\n  id,\n}: IPost) => {\n  const navigate = useNavigate();\n  const [isHoverHeart, setIsHoverHeart] = useState(false);\n  const imageCount = images?.length;\n  const handleStar = (star: number) => {\n    let stars = [];\n    for (let i = 0; i < +star; i++) {\n      stars.push(<GrStar className=\"star-item\" color=\"#ffd454\" fontSize=\"1.5em\" />);\n    }\n    return stars;\n  };\n\n  const goDetail = () => {\n    navigate(`chi-tiet/${formatVietnameseToString(title)}/${id}`);\n  };\n  return (\n    <div className=\"flex w-full p-4  border-t border-orange-600 bg-[#fff9f3]\">\n      <div\n        className=\"flex flex-wrap items-center w-2/5 gap-[2px] relative cursor-pointer\"\n        onClick={goDetail}\n      >\n        {imageCount &&\n          imageCount > 4 &&\n          images\n            ?.filter((item: {}, index: number) => indexs.some((i) => i === index))\n            ?.map((linkImage: string) => {\n              return (\n                <img\n                  key={linkImage + (Math.random() + 1).toString(36).substring(7)}\n                  src={linkImage}\n                  alt=\"error\"\n                  className=\"w-[49%] h-[120px] object-cover rounded-md\"\n                />\n              );\n            })}\n\n        <span className=\"absolute px-1 text-white bg-[rgba(0,0,0,.5)] rounded-md bottom-[8px] left-[3px]\">\n          {imageCount} ảnh\n        </span>\n        <span\n          className=\"absolute px-1 rounded-md bottom-[8px] right-[7px]\"\n          onMouseEnter={() => setIsHoverHeart(true)}\n          onMouseLeave={() => setIsHoverHeart(false)}\n        >\n          {isHoverHeart ? (\n            <RiHeartFill fontSize=\"1.5em\" color=\"red\" />\n          ) : (\n            <RiHeartLine fontSize=\"1.5em\" color=\"white\" />\n          )}\n        </span>\n      </div>\n      <div className=\"w-[60%] pl-2\">\n        <div className=\"flex justify-between\">\n          <div className=\"overflow-hidden font-medium text-red-600 \">\n            {handleStar(+star)?.length > 0 &&\n              handleStar(+star).map((element, number) => {\n                return (\n                  <span key={number + (Math.random() + 1).toString(36).substring(7)}>\n                    {element}\n                  </span>\n                );\n              })}\n            <span className=\"pl-2  cursor-pointer\" onClick={goDetail}>\n              {title}\n            </span>\n          </div>\n          <div className=\"w-[5%]  mt-1\">\n            <BsBookmarkStarFill fontSize=\"1.5em\" color=\"orange\" />\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between gap-2 my-2\">\n          <span className=\"overflow-hidden font-bold text-green-600 flex-3 text-ellipsis whitespace-nowrap\">\n            {attributes.price}\n          </span>\n          <span className=\"flex-1\">{attributes?.acreage}</span>\n          <span className=\"overflow-hidden flex-3 text-ellipsis whitespace-nowrap\">{`${\n            address.split(',')[address.split(',').length - 2]\n          }${address.split(',')[address.split(',').length - 1]}`}</span>\n        </div>\n        <p className=\"text-gray-500 line-clamp-2\">\n          {description[0]} {description[1]}\n        </p>\n        <div className=\"flex items-center justify-between my-5\">\n          <div className=\"flex\">\n            <img\n              src=\"https://ss-images.saostar.vn/wp700/pc/1613810558698/Facebook-Avatar_3.png\"\n              alt=\"\"\n              className=\"w-[30px] h-[30px]\"\n            />\n            <p className=\"ml-4 overflow-hidden whitespace-nowrap text-ellipsis\">\n              {user?.userName}\n            </p>\n          </div>\n          <div className=\"flex items-center justify-end\">\n            <button type=\"button\" className=\"text-white bg-blue-700 rounded-md \">\n              <span className=\"mx-2 my-1 \">Gọi {user?.phone}</span>\n            </button>\n            <button\n              className=\"ml-2 text-blue-700 bg-white border border-blue-700 rounded-md hover:text-white hover:bg-blue-700\"\n              type=\"button\"\n            >\n              <span className=\"mx-2 my-1 \">Nhắn Zalo</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ItemsNewpaper);\n","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\post.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\post.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\postReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\PageNumber.tsx",["284","285","286","287"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Pagination.tsx",["288"],[],"import React, { useEffect, useState } from 'react';\nimport { PageNumber } from '../../components';\nimport { useSelector } from 'react-redux';\nimport { GrLinkNext, GrLinkPrevious } from 'react-icons/gr';\nimport { RootState } from '../../store/interface';\n\ninterface props {\n  itemsNumber?: number;\n  queryPage: string;\n}\n\nconst Pagination = (props: props) => {\n  const { count, posts } = useSelector((state: RootState) => state.posts);\n  const [arrayPage, setArrayPage] = useState<number[]>([]);\n  const queryPage = +props.queryPage;\n  const [currentPage, setCurrentPage] = useState(queryPage);\n  let maxPage = (props?.itemsNumber && Math.floor(count / props?.itemsNumber)) || 1;\n  useEffect(() => {\n    let end = currentPage + 1 > maxPage ? maxPage : currentPage + 2;\n    let start = currentPage - 1 >= 4 ? currentPage - 2 : 1;\n    let temp = [];\n\n    if (maxPage !== 1) {\n      for (let i = start; i <= end; i++) {\n        temp.push(i);\n        setArrayPage(temp);\n        //setArrayPage((previous) => [...previous, i]);\n      }\n      // console.log(arrayPage);\n    } else {\n      setArrayPage([]);\n    } // console.log(arrayPage);\n  }, [currentPage, count, posts]);\n  return (\n    <div className=\"flex items-center justify-center gap-1 \">\n      {currentPage > 4 && (\n        <PageNumber\n          key={(Math.random() + 1).toString(36).substring(7)}\n          icon={<GrLinkPrevious />}\n          page={'1'}\n          currentPage={props.queryPage}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n      {currentPage > 6 && <PageNumber page=\"...\" />}\n      {arrayPage.length > 0 &&\n        arrayPage.map((item) => {\n          return (\n            <PageNumber\n              key={(Math.random() + 1).toString(36).substring(7)}\n              page={item.toString()}\n              currentPage={props.queryPage}\n              setCurrentPage={setCurrentPage}\n            />\n          );\n        })}{' '}\n      {currentPage < maxPage && <PageNumber page=\"...\" />}\n      {currentPage < maxPage && (\n        <>\n          <PageNumber\n            key={(Math.random() + 1).toString(36).substring(7)}\n            icon={<GrLinkNext />}\n            page={maxPage.toString()}\n            setCurrentPage={setCurrentPage}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\DetailPost.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemSidebar.tsx",["289","290"],[],"import React, { memo } from 'react';\nimport icons from '../ultils/icons';\nimport { ICategories, PostsAction } from '../store/interface';\nimport { Link, NavLink, useNavigate, useSearchParams } from 'react-router-dom';\nimport { formatVietnameseToString } from '../ultils/Common/formatVietnameseToString';\nimport { useDispatch } from 'react-redux';\nimport { apiGetPostsLimit } from '../services';\nimport * as actions from '../store/actions';\n\nconst { GrNext } = icons;\n\ninterface props {\n  categories: ICategories[] | undefined | null;\n  title: string;\n  twoRows: boolean;\n}\n\nconst oneRow =\n  'flex gap-2 items-baseline cursor-pointer hover:text-orange-600 border-b border-gray-200 pb-1 border-dashed w-full';\nconst twoRows =\n  'flex w-[48.33333%] gap-2 items-baseline cursor-pointer hover:text-orange-600 border-b border-gray-200 pb-1 border-dashed';\n\nconst ItemSidebar = (props: props) => {\n  const dispatch = useDispatch();\n  const [params] = useSearchParams();\n  let queryPage = params.get('page') || '1';\n  // console.log(queryPage);\n  const navigate = useNavigate();\n  const handleClickFilterPost = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    queryFilter: string,\n    url: string,\n  ) => {\n    event.preventDefault();\n    navigate(formatVietnameseToString(url));\n    if (url.includes('thuê')) {\n      dispatch(\n        actions.getPostsLimit(+queryPage, {\n          categoryCode: queryFilter,\n        }) as unknown as PostsAction,\n      );\n    } else if (url.includes('m')) {\n      dispatch(\n        actions.getPostsLimit(+queryPage, {\n          queryArea: queryFilter,\n        }) as unknown as PostsAction,\n      );\n    } else {\n      dispatch(\n        actions.getPostsLimit(+queryPage, {\n          queryPrice: queryFilter,\n        }) as unknown as PostsAction,\n      );\n    }\n  };\n\n  return (\n    <div className=\"p-4 rounded-md bg-white w-full\">\n      <h2 className=\"text-xl font-semibold\">{props.title}</h2>\n      <div\n        className={`flex gap-2  pt-2 items-start ${\n          props.twoRows ? 'flex-wrap' : 'flex-col'\n        }`}\n      >\n        {props.categories?.length &&\n          props.categories.map((item) => {\n            return (\n              <NavLink\n                key={item.code}\n                className={props.twoRows ? twoRows : oneRow}\n                to={formatVietnameseToString(item.value)}\n                onClick={(event) => {\n                  handleClickFilterPost(event, item.code, item.value);\n                }}\n              >\n                <GrNext size={10} color={'#eee'} />\n                <p>{item.value}</p>\n              </NavLink>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\nexport default memo(ItemSidebar);\n","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\app.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\appReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\interface.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\index.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\WhyUs.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\Contact.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\WhyUsData.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\ContactData.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemRelatedPost.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\RelatedPost.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\Modal.tsx",[],[],{"ruleId":"291","severity":1,"message":"292","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":23},{"ruleId":"291","severity":1,"message":"295","line":1,"column":42,"nodeType":"293","messageId":"294","endLine":1,"endColumn":49},{"ruleId":"291","severity":1,"message":"296","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":15},{"ruleId":"297","severity":1,"message":"298","line":27,"column":6,"nodeType":"299","endLine":27,"endColumn":8,"suggestions":"300"},{"ruleId":"297","severity":1,"message":"298","line":31,"column":6,"nodeType":"299","endLine":31,"endColumn":8,"suggestions":"301"},{"ruleId":"297","severity":1,"message":"302","line":23,"column":6,"nodeType":"299","endLine":23,"endColumn":8,"suggestions":"303"},{"ruleId":"291","severity":1,"message":"304","line":3,"column":17,"nodeType":"293","messageId":"294","endLine":3,"endColumn":21},{"ruleId":"291","severity":1,"message":"305","line":6,"column":10,"nodeType":"293","messageId":"294","endLine":6,"endColumn":21},{"ruleId":"291","severity":1,"message":"306","line":23,"column":11,"nodeType":"293","messageId":"294","endLine":23,"endColumn":17},{"ruleId":"291","severity":1,"message":"307","line":20,"column":9,"nodeType":"293","messageId":"294","endLine":20,"endColumn":17},{"ruleId":"297","severity":1,"message":"302","line":24,"column":6,"nodeType":"299","endLine":24,"endColumn":8,"suggestions":"308"},{"ruleId":"291","severity":1,"message":"309","line":1,"column":28,"nodeType":"293","messageId":"294","endLine":1,"endColumn":34},{"ruleId":"291","severity":1,"message":"310","line":1,"column":36,"nodeType":"293","messageId":"294","endLine":1,"endColumn":44},{"ruleId":"291","severity":1,"message":"311","line":6,"column":10,"nodeType":"293","messageId":"294","endLine":6,"endColumn":25},{"ruleId":"297","severity":1,"message":"312","line":23,"column":6,"nodeType":"299","endLine":23,"endColumn":8,"suggestions":"313"},{"ruleId":"291","severity":1,"message":"314","line":9,"column":11,"nodeType":"293","messageId":"294","endLine":9,"endColumn":22},{"ruleId":"291","severity":1,"message":"315","line":1,"column":23,"nodeType":"293","messageId":"294","endLine":1,"endColumn":34},{"ruleId":"291","severity":1,"message":"316","line":4,"column":23,"nodeType":"293","messageId":"294","endLine":4,"endColumn":27},{"ruleId":"291","severity":1,"message":"317","line":5,"column":8,"nodeType":"293","messageId":"294","endLine":5,"endColumn":12},{"ruleId":"291","severity":1,"message":"318","line":25,"column":11,"nodeType":"293","messageId":"294","endLine":25,"endColumn":21},{"ruleId":"291","severity":1,"message":"319","line":25,"column":23,"nodeType":"293","messageId":"294","endLine":25,"endColumn":29},{"ruleId":"291","severity":1,"message":"320","line":25,"column":31,"nodeType":"293","messageId":"294","endLine":25,"endColumn":36},{"ruleId":"291","severity":1,"message":"321","line":27,"column":10,"nodeType":"293","messageId":"294","endLine":27,"endColumn":16},{"ruleId":"297","severity":1,"message":"322","line":33,"column":6,"nodeType":"299","endLine":33,"endColumn":33,"suggestions":"323"},{"ruleId":"291","severity":1,"message":"316","line":4,"column":10,"nodeType":"293","messageId":"294","endLine":4,"endColumn":14},{"ruleId":"291","severity":1,"message":"324","line":7,"column":10,"nodeType":"293","messageId":"294","endLine":7,"endColumn":26},"@typescript-eslint/no-unused-vars","'CombinedState' is defined but never used.","Identifier","unusedVar","'Reducer' is defined but never used.","'IAuth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["325"],["326"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["327"],"'memo' is defined but never used.","'ICategories' is defined but never used.","'update' is assigned a value but never used.","'validate' is assigned a value but never used.",["328"],"'useRef' is defined but never used.","'useState' is defined but never used.","'useSearchParams' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'prop.queryPage'. Either include them or remove the dependency array.",["329"],"'accessToken' is assigned a value but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","'path' is defined but never used.","'categories' is assigned a value but never used.","'prices' is assigned a value but never used.","'areas' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'maxPage'. Either include it or remove the dependency array.",["330"],"'apiGetPostsLimit' is defined but never used.",{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [navigate]",{"range":"341","text":"342"},{"range":"343","text":"342"},"Update the dependencies array to be: [dispatch]",{"range":"344","text":"345"},{"range":"346","text":"345"},"Update the dependencies array to be: [dispatch, prop.queryPage]",{"range":"347","text":"348"},"Update the dependencies array to be: [currentPage, count, posts, maxPage]",{"range":"349","text":"350"},[999,1001],"[navigate]",[1113,1115],[885,887],"[dispatch]",[1180,1182],[863,865],"[dispatch, prop.queryPage]",[1138,1165],"[currentPage, count, posts, maxPage]"]