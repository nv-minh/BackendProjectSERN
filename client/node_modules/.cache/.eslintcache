[{"D:\\Coding\\ProjectSERN\\client\\src\\index.tsx":"1","D:\\Coding\\ProjectSERN\\client\\src\\redux.ts":"2","D:\\Coding\\ProjectSERN\\client\\src\\reportWebVitals.ts":"3","D:\\Coding\\ProjectSERN\\client\\src\\App.tsx":"4","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\constant.ts":"5","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\rootReducer.ts":"6","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Home.tsx":"7","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\index.tsx":"8","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\userReducer.ts":"9","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\authReducer.ts":"10","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Header.tsx":"11","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Navigation.tsx":"12","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Search.tsx":"13","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Login.tsx":"14","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Register.tsx":"15","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HomePage.tsx":"16","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ListOfNewpapers.tsx":"17","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\actionType.ts":"18","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\icons.ts":"19","D:\\Coding\\ProjectSERN\\client\\src\\services\\category.ts":"20","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\Common\\formatVietnameseToString.ts":"21","D:\\Coding\\ProjectSERN\\client\\src\\components\\SearchItem.tsx":"22","D:\\Coding\\ProjectSERN\\client\\src\\services\\auth.ts":"23","D:\\Coding\\ProjectSERN\\client\\src\\components\\InputForm.tsx":"24","D:\\Coding\\ProjectSERN\\client\\src\\components\\index.tsx":"25","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\index.ts":"26","D:\\Coding\\ProjectSERN\\client\\src\\axiosConfig.ts":"27","D:\\Coding\\ProjectSERN\\client\\src\\components\\Province.tsx":"28","D:\\Coding\\ProjectSERN\\client\\src\\components\\ProvinceButton.tsx":"29","D:\\Coding\\ProjectSERN\\client\\src\\components\\Button.tsx":"30","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\auth.ts":"31","D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemsNewpaper.tsx":"32","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\post.ts":"33","D:\\Coding\\ProjectSERN\\client\\src\\services\\post.ts":"34","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\postReducer.ts":"35","D:\\Coding\\ProjectSERN\\client\\src\\components\\PageNumber.tsx":"36","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Pagination.tsx":"37","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\DetailPost.tsx":"38","D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemSidebar.tsx":"39","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\app.ts":"40","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\appReducer.ts":"41","D:\\Coding\\ProjectSERN\\client\\src\\store\\interface.ts":"42","D:\\Coding\\ProjectSERN\\client\\src\\services\\index.ts":"43","D:\\Coding\\ProjectSERN\\client\\src\\components\\WhyUs.tsx":"44","D:\\Coding\\ProjectSERN\\client\\src\\components\\Contact.tsx":"45","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\WhyUsData.ts":"46","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\ContactData.ts":"47","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\NewPosts.tsx":"48"},{"size":902,"mtime":1677607984146,"results":"49","hashOfConfig":"50"},{"size":431,"mtime":1676047855299,"results":"51","hashOfConfig":"50"},{"size":433,"mtime":1676047855299,"results":"52","hashOfConfig":"50"},{"size":1015,"mtime":1682671082686,"results":"53","hashOfConfig":"50"},{"size":1065,"mtime":1682264089671,"results":"54","hashOfConfig":"50"},{"size":870,"mtime":1682248791190,"results":"55","hashOfConfig":"50"},{"size":599,"mtime":1682672385800,"results":"56","hashOfConfig":"50"},{"size":554,"mtime":1682673880586,"results":"57","hashOfConfig":"50"},{"size":277,"mtime":1682242931596,"results":"58","hashOfConfig":"50"},{"size":1315,"mtime":1682246530172,"results":"59","hashOfConfig":"50"},{"size":2611,"mtime":1682671754356,"results":"60","hashOfConfig":"50"},{"size":2694,"mtime":1682673350481,"results":"61","hashOfConfig":"50"},{"size":1246,"mtime":1677607996836,"results":"62","hashOfConfig":"50"},{"size":4036,"mtime":1682242568274,"results":"63","hashOfConfig":"50"},{"size":4028,"mtime":1682242481944,"results":"64","hashOfConfig":"50"},{"size":2061,"mtime":1682666632234,"results":"65","hashOfConfig":"50"},{"size":2172,"mtime":1682541584093,"results":"66","hashOfConfig":"50"},{"size":388,"mtime":1682381934996,"results":"67","hashOfConfig":"50"},{"size":1106,"mtime":1676299682216,"results":"68","hashOfConfig":"50"},{"size":703,"mtime":1682383014193,"results":"69","hashOfConfig":"50"},{"size":193,"mtime":1676139612828,"results":"70","hashOfConfig":"50"},{"size":612,"mtime":1682242905377,"results":"71","hashOfConfig":"50"},{"size":602,"mtime":1682242905491,"results":"72","hashOfConfig":"50"},{"size":887,"mtime":1682242905959,"results":"73","hashOfConfig":"50"},{"size":526,"mtime":1682665604803,"results":"74","hashOfConfig":"50"},{"size":71,"mtime":1682234671121,"results":"75","hashOfConfig":"50"},{"size":497,"mtime":1676047855299,"results":"76","hashOfConfig":"50"},{"size":399,"mtime":1677608019057,"results":"77","hashOfConfig":"50"},{"size":543,"mtime":1682242905370,"results":"78","hashOfConfig":"50"},{"size":549,"mtime":1682242748283,"results":"79","hashOfConfig":"50"},{"size":1712,"mtime":1682247819500,"results":"80","hashOfConfig":"50"},{"size":4676,"mtime":1682614475973,"results":"81","hashOfConfig":"50"},{"size":1381,"mtime":1682669389443,"results":"82","hashOfConfig":"50"},{"size":592,"mtime":1682530214114,"results":"83","hashOfConfig":"50"},{"size":656,"mtime":1682542209504,"results":"84","hashOfConfig":"50"},{"size":2033,"mtime":1682615601160,"results":"85","hashOfConfig":"50"},{"size":2265,"mtime":1682615195942,"results":"86","hashOfConfig":"50"},{"size":79,"mtime":1682181072447,"results":"87","hashOfConfig":"50"},{"size":2665,"mtime":1682619026741,"results":"88","hashOfConfig":"50"},{"size":1754,"mtime":1682383543871,"results":"89","hashOfConfig":"50"},{"size":819,"mtime":1682383543878,"results":"90","hashOfConfig":"50"},{"size":1061,"mtime":1682248934328,"results":"91","hashOfConfig":"50"},{"size":76,"mtime":1682263906596,"results":"92","hashOfConfig":"50"},{"size":3114,"mtime":1682672357876,"results":"93","hashOfConfig":"50"},{"size":1080,"mtime":1682672435991,"results":"94","hashOfConfig":"50"},{"size":1476,"mtime":1682668059040,"results":"95","hashOfConfig":"50"},{"size":545,"mtime":1682665885248,"results":"96","hashOfConfig":"50"},{"size":71,"mtime":1682673928769,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"9h3l1x",{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"220"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\ProjectSERN\\client\\src\\index.tsx",[],[],[],"D:\\Coding\\ProjectSERN\\client\\src\\redux.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\reportWebVitals.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\App.tsx",[],[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\constant.ts",[],[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\rootReducer.ts",["256","257","258"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Home.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\index.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\userReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\authReducer.ts",["259"],[],"import { IAuth } from '../../interface';\nimport actionType from '../actions/actionType';\nimport { AuthAction, RootStateAuth } from '../interface';\n\nconst initState: RootStateAuth = {\n  isLoggedIn: false,\n  accessToken: null,\n};\n\nconst authReducer = (state = initState, action: AuthAction) => {\n  switch (action.type) {\n    case actionType.REGISTER_SUCCESS:\n      return {\n        ...(state as object),\n        type: actionType.REGISTER_SUCCESS,\n        isLoggedIn: true,\n        accessToken: action.accessToken,\n      };\n    case actionType.REGISTER_FAIL:\n      return {\n        ...(state as object),\n        type: actionType.REGISTER_FAIL,\n        isLoggedIn: false,\n        accessToken: null,\n      };\n    case actionType.LOGIN_SUCCESS:\n      return {\n        ...(state as object),\n        type: actionType.LOGIN_SUCCESS,\n        isLoggedIn: true,\n        accessToken: action.accessToken,\n      };\n    case actionType.LOGIN_FAIL:\n      return {\n        ...(state as object),\n        type: actionType.LOGIN_FAIL,\n        isLoggedIn: false,\n        accessToken: null,\n      };\n    case actionType.LOGOUT:\n      return {\n        ...(state as object),\n        type: actionType.LOGOUT,\n        isLoggedIn: false,\n        accessToken: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n",[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Header.tsx",["260","261"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Navigation.tsx",["262"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Search.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Login.tsx",["263"],[],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from '../../components';\nimport InputForm from '../../components/InputForm';\nimport path from '../../ultils/constant';\nimport { apiLogin } from '../../services/auth';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { useNavigate } from 'react-router';\nimport { IUser } from './../../interface';\nimport { useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nconst Login = () => {\n  const [loginForm, setLoginForm] = useState({\n    userName: '',\n    phone: '',\n    password: '',\n  });\n  const [invalidFields, setInvalidFields] = useState<Array<Object>>([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { update } = useSelector((state: any) => state.auth);\n\n  const validate = (loginForm: IUser) => {\n    let invalid = 0;\n    let fields = Object.entries(loginForm);\n\n    fields.slice(1).forEach((field) => {\n      if (field[1] === '') {\n        setInvalidFields((previous) => [\n          ...previous,\n          {\n            name: field[0],\n            message: 'Bạn không được bỏ trống trường này!',\n          },\n        ]);\n        invalid++;\n      }\n    });\n    fields.slice(1).forEach((field) => {\n      switch (field[0]) {\n        case 'password':\n          if (field[1].length < 6) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Mật khẩu phải có tối thiểu 6 kí tự!',\n              },\n            ]);\n            invalid++;\n          }\n          break;\n        case 'phone':\n          if (!+field[1]) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Số điện thoại không hợp lệ!',\n              },\n            ]);\n            invalid++;\n          }\n      }\n    });\n    return invalid;\n  };\n  const handleClickButton = async () => {\n    try {\n      let invalids = await validate(loginForm);\n      if (invalids === 0) {\n        const loginData = await apiLogin(loginForm);\n        dispatch(actions.login(loginForm) as unknown as any);\n        if (loginData?.data.success === true) {\n          Swal.fire('successfully!', loginData?.data.message, 'success');\n          navigate('/');\n          setLoginForm({ userName: '', phone: '', password: '' });\n        } else {\n          loginData?.data.message &&\n            Swal.fire('Oops !', loginData?.data.message, 'error');\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"bg-white w-[600px] max-w-600 p-[30px] pb-[100px] rounded-md shadow-sm start\">\n      <h3 className=\"mb-3 text-2xl font-semibold\">Đăng nhập</h3>\n      <div className=\"flex flex-col w-full gap-5\">\n        <InputForm\n          label={'Số Điện Thoại'}\n          typeInput={'text'}\n          value={loginForm.phone}\n          type={'phone'}\n          setValue={setLoginForm}\n          invalidFields={invalidFields}\n        />\n        <InputForm\n          label={'Mật Khẩu'}\n          typeInput={'password'}\n          type={'password'}\n          value={loginForm.password}\n          setValue={setLoginForm}\n          invalidFields={invalidFields}\n        />\n        <Button\n          text=\"Đăng Nhập\"\n          textColor=\"text-white\"\n          bgColor=\"!bg-secondary1\"\n          fullWidth\n          onClick={() => {\n            handleClickButton();\n          }}\n        />\n      </div>\n      <div className=\"flex justify-between mt-7\">\n        <small className=\"text-[blue] hover:text-[red] cursor-pointer\">\n          Bạn Quên Mật Khẩu\n        </small>\n        <NavLink to={'/' + path.REGISTER}>\n          <small className=\"text-[blue] hover:text-[red] cursor-pointer\">\n            Tạo Tài Khoản Mới\n          </small>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Register.tsx",["264"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HomePage.tsx",["265"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ListOfNewpapers.tsx",["266","267","268","269","270"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport { Button, ItemsNewpaper } from '../../components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPostsLimit } from '../../store/actions/post';\nimport { PostsAction, RootState } from '../../store/interface';\nimport { useSearchParams } from 'react-router-dom';\n\ninterface prop {\n  queryPage: string;\n}\n\nconst ListOfNewpapers = (prop: prop) => {\n  const dispatch = useDispatch();\n  const { posts, count } = useSelector((state: RootState) => state.posts);\n\n  // const listRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    dispatch(getPostsLimit(+prop.queryPage, {}) as unknown as PostsAction);\n    // if (listRef) {\n    //   listRef?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    //\n  }, []);\n\n  return (\n    <div className=\"p-2\">\n      <div className=\"flex items-center justify-between \">\n        <h4 className=\"text-base font-medium\">Danh sách tin đăng</h4>\n        <span className=\"text-xs\">Cập nhật: 12:05 25/08/2022</span>\n      </div>\n      <div className=\"flex items-center gap-1 py-2 text-xs\">\n        <span className=\"text-sm\">Sắp xếp</span>\n        <Button\n          text=\"Mặc định\"\n          textColor=\"text-black\"\n          bgColor=\"!bg-[#f1f1f1]\"\n          size=\"h-[25px] w-[110px]\"\n        />\n        <Button\n          text=\"Mới nhất\"\n          textColor=\"text-black\"\n          bgColor=\"!bg-[#f1f1f1]\"\n          size=\"h-[25px] w-[100px]\"\n        />\n      </div>\n      <div className=\"flex flex-col\">\n        {posts?.length > 0 &&\n          posts.map((item: any) => {\n            const obj = JSON.parse(item.images.image);\n            return (\n              <ItemsNewpaper\n                key={item?.id}\n                images={obj}\n                address={item.address}\n                attributes={item.attributes}\n                title={item.title}\n                description={JSON.parse(item.description)}\n                user={item.user}\n                star={item.star}\n                id={item?.id}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default ListOfNewpapers;\n",[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\actionType.ts",[],[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\icons.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\category.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\Common\\formatVietnameseToString.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\SearchItem.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\auth.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\InputForm.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\index.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\index.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\axiosConfig.ts",["271"],[],"import axios from 'axios';\n// require(\"dotenv\").config();\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000',\n});\n// Add a request interceptor\ninstance.interceptors.request.use(\n  (config) => {\n    const accessToken = localStorage.getItem('persist:auth');\n\n    // Do something before request is sent\n    return config;\n  },\n  async (error) => {\n    // Do something with request error\n    console.log(error);\n    return await Promise.reject(error);\n  },\n);\nexport default instance;\n","D:\\Coding\\ProjectSERN\\client\\src\\components\\Province.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ProvinceButton.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\Button.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\auth.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemsNewpaper.tsx",["272","273","274"],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\post.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\post.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\postReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\PageNumber.tsx",["275","276","277","278","279"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Pagination.tsx",["280"],[],"import React, { useEffect, useState } from 'react';\nimport { PageNumber } from '../../components';\nimport { useSelector } from 'react-redux';\nimport { GrLinkNext, GrLinkPrevious } from 'react-icons/gr';\nimport { RootState } from '../../store/interface';\n\ninterface props {\n  itemsNumber: number;\n  queryPage: string;\n}\n\nconst Pagination = (props: props) => {\n  const { count, posts } = useSelector((state: RootState) => state.posts);\n  const [arrayPage, setArrayPage] = useState<number[]>([]);\n  const queryPage = +props.queryPage;\n  const [currentPage, setCurrentPage] = useState(queryPage);\n  let maxPage = Math.floor(count / props.itemsNumber);\n  useEffect(() => {\n    let end = currentPage + 1 > maxPage ? maxPage : currentPage + 2;\n    let start = currentPage - 1 >= 4 ? currentPage - 2 : 1;\n    let temp = [];\n\n    if (maxPage !== 1) {\n      for (let i = start; i <= end; i++) {\n        temp.push(i);\n        setArrayPage(temp);\n        //setArrayPage((previous) => [...previous, i]);\n      }\n      // console.log(arrayPage);\n    } else {\n      setArrayPage([]);\n    } // console.log(arrayPage);\n  }, [currentPage, count, posts]);\n  return (\n    <div className=\"flex items-center justify-center gap-1 \">\n      {currentPage > 4 && (\n        <PageNumber\n          key={(Math.random() + 1).toString(36).substring(7)}\n          icon={<GrLinkPrevious />}\n          page={'1'}\n          currentPage={props.queryPage}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n      {currentPage > 6 && <PageNumber page=\"...\" />}\n      {arrayPage.length > 0 &&\n        arrayPage.map((item) => {\n          return (\n            <PageNumber\n              key={(Math.random() + 1).toString(36).substring(7)}\n              page={item.toString()}\n              currentPage={props.queryPage}\n              setCurrentPage={setCurrentPage}\n            />\n          );\n        })}{' '}\n      {currentPage < maxPage && <PageNumber page=\"...\" />}\n      {currentPage < maxPage && (\n        <>\n          <PageNumber\n            key={(Math.random() + 1).toString(36).substring(7)}\n            icon={<GrLinkNext />}\n            page={maxPage.toString()}\n            setCurrentPage={setCurrentPage}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n",[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\DetailPost.tsx",[],[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemSidebar.tsx",["281","282"],[],"import React, { memo } from 'react';\nimport icons from '../ultils/icons';\nimport { ICategories, PostsAction } from '../store/interface';\nimport { Link, NavLink, useNavigate, useSearchParams } from 'react-router-dom';\nimport { formatVietnameseToString } from '../ultils/Common/formatVietnameseToString';\nimport { useDispatch } from 'react-redux';\nimport { apiGetPostsLimit } from '../services';\nimport * as actions from '../store/actions';\n\nconst { GrNext } = icons;\n\ninterface props {\n  categories: ICategories[] | undefined | null;\n  title: string;\n  twoRows: boolean;\n}\n\nconst oneRow =\n  'flex gap-2 items-baseline cursor-pointer hover:text-orange-600 border-b border-gray-200 pb-1 border-dashed w-full';\nconst twoRows =\n  'flex w-[48.33333%] gap-2 items-baseline cursor-pointer hover:text-orange-600 border-b border-gray-200 pb-1 border-dashed';\n\nconst ItemSidebar = (props: props) => {\n  const dispatch = useDispatch();\n  const [params] = useSearchParams();\n  let queryPage = params.get('page') || '1';\n  // console.log(queryPage);\n  const navigate = useNavigate();\n  const handleClickFilterPost = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    queryFilter: string,\n    url: string,\n  ) => {\n    event.preventDefault();\n    navigate(formatVietnameseToString(url));\n    if (url.includes('thuê')) {\n      dispatch(\n        actions.getPostsLimit(+queryPage, {\n          categoryCode: queryFilter,\n        }) as unknown as PostsAction,\n      );\n    } else if (url.includes('m')) {\n      dispatch(\n        actions.getPostsLimit(+queryPage, {\n          queryArea: queryFilter,\n        }) as unknown as PostsAction,\n      );\n    } else {\n      dispatch(\n        actions.getPostsLimit(+queryPage, {\n          queryPrice: queryFilter,\n        }) as unknown as PostsAction,\n      );\n    }\n  };\n\n  return (\n    <div className=\"p-4 rounded-md bg-white w-full\">\n      <h2 className=\"text-xl font-semibold\">{props.title}</h2>\n      <div\n        className={`flex gap-2  pt-2 items-start ${\n          props.twoRows ? 'flex-wrap' : 'flex-col'\n        }`}\n      >\n        {props.categories?.length &&\n          props.categories.map((item) => {\n            return (\n              <NavLink\n                className={props.twoRows ? twoRows : oneRow}\n                to={formatVietnameseToString(item.value)}\n                onClick={(event) => {\n                  handleClickFilterPost(event, item.code, item.value);\n                }}\n              >\n                <GrNext size={10} color={'#eee'} />\n                <p>{item.value}</p>\n              </NavLink>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\nexport default memo(ItemSidebar);\n","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\app.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\appReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\interface.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\index.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\WhyUs.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\Contact.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\WhyUsData.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\ContactData.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\NewPosts.tsx",[],[],{"ruleId":"283","severity":1,"message":"284","line":1,"column":10,"nodeType":"285","messageId":"286","endLine":1,"endColumn":23},{"ruleId":"283","severity":1,"message":"287","line":1,"column":42,"nodeType":"285","messageId":"286","endLine":1,"endColumn":49},{"ruleId":"283","severity":1,"message":"288","line":7,"column":10,"nodeType":"285","messageId":"286","endLine":7,"endColumn":15},{"ruleId":"283","severity":1,"message":"288","line":1,"column":10,"nodeType":"285","messageId":"286","endLine":1,"endColumn":15},{"ruleId":"289","severity":1,"message":"290","line":27,"column":6,"nodeType":"291","endLine":27,"endColumn":8,"suggestions":"292"},{"ruleId":"289","severity":1,"message":"290","line":31,"column":6,"nodeType":"291","endLine":31,"endColumn":8,"suggestions":"293"},{"ruleId":"289","severity":1,"message":"294","line":23,"column":6,"nodeType":"291","endLine":23,"endColumn":8,"suggestions":"295"},{"ruleId":"283","severity":1,"message":"296","line":23,"column":11,"nodeType":"285","messageId":"286","endLine":23,"endColumn":17},{"ruleId":"283","severity":1,"message":"297","line":20,"column":9,"nodeType":"285","messageId":"286","endLine":20,"endColumn":17},{"ruleId":"289","severity":1,"message":"294","line":21,"column":6,"nodeType":"291","endLine":21,"endColumn":8,"suggestions":"298"},{"ruleId":"283","severity":1,"message":"299","line":1,"column":28,"nodeType":"285","messageId":"286","endLine":1,"endColumn":34},{"ruleId":"283","severity":1,"message":"300","line":1,"column":36,"nodeType":"285","messageId":"286","endLine":1,"endColumn":44},{"ruleId":"283","severity":1,"message":"301","line":6,"column":10,"nodeType":"285","messageId":"286","endLine":6,"endColumn":25},{"ruleId":"283","severity":1,"message":"302","line":14,"column":18,"nodeType":"285","messageId":"286","endLine":14,"endColumn":23},{"ruleId":"289","severity":1,"message":"303","line":23,"column":6,"nodeType":"291","endLine":23,"endColumn":8,"suggestions":"304"},{"ruleId":"283","severity":1,"message":"305","line":9,"column":11,"nodeType":"285","messageId":"286","endLine":9,"endColumn":22},{"ruleId":"283","severity":1,"message":"306","line":1,"column":23,"nodeType":"285","messageId":"286","endLine":1,"endColumn":34},{"ruleId":"283","severity":1,"message":"307","line":4,"column":23,"nodeType":"285","messageId":"286","endLine":4,"endColumn":27},{"ruleId":"283","severity":1,"message":"308","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":12},{"ruleId":"283","severity":1,"message":"309","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":22},{"ruleId":"283","severity":1,"message":"310","line":26,"column":11,"nodeType":"285","messageId":"286","endLine":26,"endColumn":21},{"ruleId":"283","severity":1,"message":"311","line":26,"column":23,"nodeType":"285","messageId":"286","endLine":26,"endColumn":29},{"ruleId":"283","severity":1,"message":"312","line":26,"column":31,"nodeType":"285","messageId":"286","endLine":26,"endColumn":36},{"ruleId":"283","severity":1,"message":"313","line":28,"column":10,"nodeType":"285","messageId":"286","endLine":28,"endColumn":16},{"ruleId":"289","severity":1,"message":"314","line":33,"column":6,"nodeType":"291","endLine":33,"endColumn":33,"suggestions":"315"},{"ruleId":"283","severity":1,"message":"307","line":4,"column":10,"nodeType":"285","messageId":"286","endLine":4,"endColumn":14},{"ruleId":"283","severity":1,"message":"316","line":7,"column":10,"nodeType":"285","messageId":"286","endLine":7,"endColumn":26},"@typescript-eslint/no-unused-vars","'CombinedState' is defined but never used.","Identifier","unusedVar","'Reducer' is defined but never used.","'IAuth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["317"],["318"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["319"],"'update' is assigned a value but never used.","'validate' is assigned a value but never used.",["320"],"'useRef' is defined but never used.","'useState' is defined but never used.","'useSearchParams' is defined but never used.","'count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'prop.queryPage'. Either include them or remove the dependency array.",["321"],"'accessToken' is assigned a value but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","'path' is defined but never used.","'IQueryFilter' is defined but never used.","'categories' is assigned a value but never used.","'prices' is assigned a value but never used.","'areas' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'maxPage'. Either include it or remove the dependency array.",["322"],"'apiGetPostsLimit' is defined but never used.",{"desc":"323","fix":"324"},{"desc":"323","fix":"325"},{"desc":"326","fix":"327"},{"desc":"326","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [navigate]",{"range":"333","text":"334"},{"range":"335","text":"334"},"Update the dependencies array to be: [dispatch]",{"range":"336","text":"337"},{"range":"338","text":"337"},"Update the dependencies array to be: [dispatch, prop.queryPage]",{"range":"339","text":"340"},"Update the dependencies array to be: [currentPage, count, posts, maxPage]",{"range":"341","text":"342"},[999,1001],"[navigate]",[1113,1115],[885,887],"[dispatch]",[981,983],[809,811],"[dispatch, prop.queryPage]",[1107,1134],"[currentPage, count, posts, maxPage]"]