[{"D:\\Coding\\ProjectSERN\\client\\src\\index.tsx":"1","D:\\Coding\\ProjectSERN\\client\\src\\redux.ts":"2","D:\\Coding\\ProjectSERN\\client\\src\\reportWebVitals.ts":"3","D:\\Coding\\ProjectSERN\\client\\src\\App.tsx":"4","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\constant.ts":"5","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\rootReducer.ts":"6","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Home.tsx":"7","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\index.tsx":"8","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\userReducer.ts":"9","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\authReducer.ts":"10","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Header.tsx":"11","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Navigation.tsx":"12","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Search.tsx":"13","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ForRent.tsx":"14","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Login.tsx":"15","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Register.tsx":"16","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\RentalApartment.tsx":"17","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HouseForRent.tsx":"18","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HomePage.tsx":"19","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\RoomForRent.tsx":"20","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ListOfNewpapers.tsx":"21","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\SidebarOfPage.tsx":"22","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\actionType.ts":"23","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\icons.ts":"24","D:\\Coding\\ProjectSERN\\client\\src\\services\\category.ts":"25","D:\\Coding\\ProjectSERN\\client\\src\\ultils\\Common\\formatVietnameseToString.ts":"26","D:\\Coding\\ProjectSERN\\client\\src\\components\\SearchItem.tsx":"27","D:\\Coding\\ProjectSERN\\client\\src\\services\\auth.ts":"28","D:\\Coding\\ProjectSERN\\client\\src\\components\\InputForm.tsx":"29","D:\\Coding\\ProjectSERN\\client\\src\\components\\index.tsx":"30","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\index.ts":"31","D:\\Coding\\ProjectSERN\\client\\src\\axiosConfig.ts":"32","D:\\Coding\\ProjectSERN\\client\\src\\components\\Province.tsx":"33","D:\\Coding\\ProjectSERN\\client\\src\\components\\ProvinceButton.tsx":"34","D:\\Coding\\ProjectSERN\\client\\src\\components\\Button.tsx":"35","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\auth.ts":"36","D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemsNewpaper.tsx":"37","D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\post.ts":"38","D:\\Coding\\ProjectSERN\\client\\src\\services\\post.ts":"39","D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\postReducer.ts":"40","D:\\Coding\\ProjectSERN\\client\\src\\components\\PageNumber.tsx":"41","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Pagination.tsx":"42","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\DetailPost.tsx":"43"},{"size":902,"mtime":1677607984146,"results":"44","hashOfConfig":"45"},{"size":431,"mtime":1676047855299,"results":"46","hashOfConfig":"45"},{"size":433,"mtime":1676047855299,"results":"47","hashOfConfig":"45"},{"size":1098,"mtime":1682179978538,"results":"48","hashOfConfig":"45"},{"size":1064,"mtime":1682178563610,"results":"49","hashOfConfig":"45"},{"size":764,"mtime":1678038656935,"results":"50","hashOfConfig":"45"},{"size":474,"mtime":1677739214679,"results":"51","hashOfConfig":"45"},{"size":790,"mtime":1682178656043,"results":"52","hashOfConfig":"45"},{"size":282,"mtime":1676047855299,"results":"53","hashOfConfig":"45"},{"size":1047,"mtime":1676103746464,"results":"54","hashOfConfig":"45"},{"size":2664,"mtime":1682177406547,"results":"55","hashOfConfig":"45"},{"size":1451,"mtime":1677608063323,"results":"56","hashOfConfig":"45"},{"size":1246,"mtime":1677607996836,"results":"57","hashOfConfig":"45"},{"size":109,"mtime":1677608079504,"results":"58","hashOfConfig":"45"},{"size":4040,"mtime":1682096293239,"results":"59","hashOfConfig":"45"},{"size":4032,"mtime":1682097301579,"results":"60","hashOfConfig":"45"},{"size":133,"mtime":1677608072633,"results":"61","hashOfConfig":"45"},{"size":197,"mtime":1677608050230,"results":"62","hashOfConfig":"45"},{"size":1228,"mtime":1682176250428,"results":"63","hashOfConfig":"45"},{"size":121,"mtime":1677608094481,"results":"64","hashOfConfig":"45"},{"size":2042,"mtime":1682180078633,"results":"65","hashOfConfig":"45"},{"size":127,"mtime":1677608522271,"results":"66","hashOfConfig":"45"},{"size":275,"mtime":1678720547782,"results":"67","hashOfConfig":"45"},{"size":1106,"mtime":1676299682216,"results":"68","hashOfConfig":"45"},{"size":268,"mtime":1678026226220,"results":"69","hashOfConfig":"45"},{"size":193,"mtime":1676139612828,"results":"70","hashOfConfig":"45"},{"size":628,"mtime":1677608236538,"results":"71","hashOfConfig":"45"},{"size":607,"mtime":1676047855299,"results":"72","hashOfConfig":"45"},{"size":902,"mtime":1676047855299,"results":"73","hashOfConfig":"45"},{"size":378,"mtime":1678970048803,"results":"74","hashOfConfig":"45"},{"size":24,"mtime":1676047855299,"results":"75","hashOfConfig":"45"},{"size":497,"mtime":1676047855299,"results":"76","hashOfConfig":"45"},{"size":399,"mtime":1677608019057,"results":"77","hashOfConfig":"45"},{"size":563,"mtime":1677594350867,"results":"78","hashOfConfig":"45"},{"size":561,"mtime":1677610560571,"results":"79","hashOfConfig":"45"},{"size":1371,"mtime":1676050248304,"results":"80","hashOfConfig":"45"},{"size":4615,"mtime":1682181002311,"results":"81","hashOfConfig":"45"},{"size":952,"mtime":1678969705360,"results":"82","hashOfConfig":"45"},{"size":536,"mtime":1678718133214,"results":"83","hashOfConfig":"45"},{"size":477,"mtime":1678971181507,"results":"84","hashOfConfig":"45"},{"size":1268,"mtime":1682176351223,"results":"85","hashOfConfig":"45"},{"size":1738,"mtime":1682179594298,"results":"86","hashOfConfig":"45"},{"size":79,"mtime":1682181072447,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"9h3l1x",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"91"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\ProjectSERN\\client\\src\\index.tsx",[],[],[],"D:\\Coding\\ProjectSERN\\client\\src\\redux.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\reportWebVitals.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\App.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\constant.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\rootReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Home.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\index.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\userReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\authReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Header.tsx",["223","224","225"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Navigation.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Search.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ForRent.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Login.tsx",["226"],[],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from '../../components';\nimport InputForm from '../../components/InputForm';\nimport path from '../../ultils/constant';\nimport { apiLogin } from '../../services/auth';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { useNavigate } from 'react-router';\nimport { IUser } from './../../interface/User';\nimport { useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nconst Login = () => {\n  const [loginForm, setLoginForm] = useState({\n    userName: '',\n    phone: '',\n    password: '',\n  });\n  const [invalidFields, setInvalidFields] = useState<Array<Object>>([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { update } = useSelector((state: any) => state.auth);\n\n  const validate = (loginForm: IUser) => {\n    let invalid = 0;\n    let fields = Object.entries(loginForm);\n\n    fields.slice(1).forEach((field) => {\n      if (field[1] === '') {\n        setInvalidFields((previous) => [\n          ...previous,\n          {\n            name: field[0],\n            message: 'Bạn không được bỏ trống trường này!',\n          },\n        ]);\n        invalid++;\n      }\n    });\n    fields.slice(1).forEach((field) => {\n      switch (field[0]) {\n        case 'password':\n          if (field[1].length < 6) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Mật khẩu phải có tối thiểu 6 kí tự!',\n              },\n            ]);\n            invalid++;\n          }\n          break;\n        case 'phone':\n          if (!+field[1]) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Số điện thoại không hợp lệ!',\n              },\n            ]);\n            invalid++;\n          }\n      }\n    });\n    return invalid;\n  };\n  const handleClickButton = async () => {\n    try {\n      let invalids = await validate(loginForm);\n      if (invalids === 0) {\n        const loginData = await apiLogin(loginForm);\n        dispatch(actions.login(loginForm) as unknown as any);\n        if (loginData?.data.success === true) {\n          Swal.fire('successfully!', loginData?.data.message, 'success');\n          navigate('/');\n          setLoginForm({ userName: '', phone: '', password: '' });\n        } else {\n          loginData?.data.message &&\n            Swal.fire('Oops !', loginData?.data.message, 'error');\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"bg-white w-[600px] max-w-600 p-[30px] pb-[100px] rounded-md shadow-sm start\">\n      <h3 className=\"mb-3 text-2xl font-semibold\">Đăng nhập</h3>\n      <div className=\"flex flex-col w-full gap-5\">\n        <InputForm\n          label={'Số Điện Thoại'}\n          typeInput={'text'}\n          value={loginForm.phone}\n          type={'phone'}\n          setValue={setLoginForm}\n          invalidFields={invalidFields}\n        />\n        <InputForm\n          label={'Mật Khẩu'}\n          typeInput={'password'}\n          type={'password'}\n          value={loginForm.password}\n          setValue={setLoginForm}\n          invalidFields={invalidFields}\n        />\n        <Button\n          text=\"Đăng Nhập\"\n          textColor=\"text-white\"\n          bgColor=\"!bg-secondary1\"\n          fullWidth\n          onClick={() => {\n            handleClickButton();\n          }}\n        />\n      </div>\n      <div className=\"flex justify-between mt-7\">\n        <small className=\"text-[blue] hover:text-[red] cursor-pointer\">\n          Bạn Quên Mật Khẩu\n        </small>\n        <NavLink to={'/' + path.REGISTER}>\n          <small className=\"text-[blue] hover:text-[red] cursor-pointer\">\n            Tạo Tài Khoản Mới\n          </small>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Register.tsx",["227"],[],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button, InputForm } from '../../components';\nimport path from '../../ultils/constant';\nimport { apiRegister } from '../../services/auth';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { useNavigate } from 'react-router';\nimport { IUser } from '../../interface/User';\nconst Register = () => {\n  const [registerForm, setRegisterForm] = useState<IUser>({\n    userName: '',\n    phone: '',\n    password: '',\n  });\n  const [invalidFields, setInvalidFields] = useState<Array<Object>>([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const validate = (loginForm: IUser) => {\n    let invalid = 0;\n    let fields = Object.entries(loginForm);\n    fields.slice(1).forEach((field) => {\n      if (field[1] === '')\n        setInvalidFields((previous) => [\n          ...previous,\n          {\n            name: field[0],\n            message: 'Bạn không được bỏ trống trường này!',\n          },\n        ]);\n      invalid++;\n    });\n    fields.slice(1).forEach((field) => {\n      switch (field[0]) {\n        case 'password':\n          if (field[1].length < 6) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Mật khẩu phải có tối thiểu 6 kí tự!',\n              },\n            ]);\n            invalid++;\n          }\n          break;\n        case 'phone':\n          if (!+field[1]) {\n            setInvalidFields((previous) => [\n              ...previous,\n              {\n                name: field[0],\n                message: 'Số điện thoại không hợp lệ!',\n              },\n            ]);\n            invalid++;\n          }\n      }\n    });\n\n    return invalid;\n  };\n  const handleClickButton = async () => {\n    try {\n      const registerData = await apiRegister(registerForm);\n      dispatch(actions.register(registerForm) as unknown as any);\n      if (registerData?.data.success === true) {\n        setRegisterForm({ userName: '', phone: '', password: '' });\n        alert('Chúc mừng bạn đã đăng ký thành công');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"bg-white w-[600px] max-w-600 p-[30px] pb-[100px] rounded-md shadow-sm\">\n      <h3 className=\"mb-3 text-2xl font-semibold\">Đăng Ký Tài Khoản</h3>\n      <div className=\"flex flex-col w-full gap-5\">\n        <InputForm\n          label={'Họ tên'}\n          typeInput={'text'}\n          type={'userName'}\n          value={registerForm.userName}\n          setValue={setRegisterForm}\n          invalidFields={invalidFields}\n        />\n        <InputForm\n          label={'Số Điện Thoại'}\n          typeInput={'number'}\n          type={'phone'}\n          value={registerForm.phone}\n          setValue={setRegisterForm}\n          invalidFields={invalidFields}\n        />\n        <InputForm\n          label={'Tạo Mật Khẩu'}\n          typeInput={'password'}\n          type={'password'}\n          value={registerForm.password}\n          setValue={setRegisterForm}\n          invalidFields={invalidFields}\n        />\n        <Button\n          text=\"Tạo Tài Khoản\"\n          textColor=\"text-white\"\n          bgColor=\"!bg-secondary1\"\n          fullWidth\n          onClick={handleClickButton}\n        />\n      </div>\n      <div className=\"flex flex-col mt-7\">\n        <small className=\" hover:text-[red] cursor-pointer\">\n          Bấm vào nút đăng ký tức là bạn đã đồng ý với quy định sử dụng của chúng tôi\n        </small>\n        <small className=\"flex hover:text-[red] cursor-pointer mt-5\">\n          Bạn đã có tài khoản ?{' '}\n          <NavLink to={'/' + path.LOGIN}>\n            <p className=\"text-[blue] ml-1\"> Đăng nhập ngay</p>\n          </NavLink>\n        </small>\n      </div>\n    </div>\n  );\n};\nexport default Register;\n","D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\RentalApartment.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HouseForRent.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\HomePage.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\RoomForRent.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\ListOfNewpapers.tsx",["228","229","230","231"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\SidebarOfPage.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\actionType.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\icons.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\category.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\ultils\\Common\\formatVietnameseToString.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\SearchItem.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\auth.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\InputForm.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\index.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\index.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\axiosConfig.ts",["232"],[],"import axios from 'axios';\n// require(\"dotenv\").config();\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000',\n});\n// Add a request interceptor\ninstance.interceptors.request.use(\n  (config) => {\n    const accessToken = localStorage.getItem('persist:auth');\n\n    // Do something before request is sent\n    return config;\n  },\n  async (error) => {\n    // Do something with request error\n    console.log(error);\n    return await Promise.reject(error);\n  },\n);\nexport default instance;\n","D:\\Coding\\ProjectSERN\\client\\src\\components\\Province.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ProvinceButton.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\Button.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\auth.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\ItemsNewpaper.tsx",["233","234","235"],[],"import React, { memo, useCallback, useState } from 'react';\nimport icons from '../ultils/icons';\nimport { IPost } from '../interface/Post';\nimport { useNavigate, Link } from 'react-router-dom';\nimport path from '../ultils/constant';\nimport { formatVietnameseToString } from '../ultils/Common/formatVietnameseToString';\n\nconst indexs = [0, 1, 2, 3];\nconst { GrStar, RiHeartFill, RiHeartLine, BsBookmarkStarFill } = icons;\nconst ItemsNewpaper = ({\n  images,\n  user,\n  title,\n  star,\n  description,\n  attributes,\n  address,\n  id,\n}: IPost) => {\n  const navigate = useNavigate();\n  const [isHoverHeart, setIsHoverHeart] = useState(false);\n  const imageCount = images?.length;\n  const handleStar = (star: number) => {\n    let stars = [];\n    for (let i = 0; i < +star; i++) {\n      stars.push(<GrStar className=\"star-item\" color=\"#ffd454\" fontSize=\"1.5em\" />);\n    }\n    return stars;\n  };\n\n  const goDetail = () => {\n    navigate(`chi-tiet/${formatVietnameseToString(title)}/${id}`);\n  };\n  return (\n    <div className=\"flex w-full p-4  border-t border-orange-600 bg-[#fff9f3]\">\n      <div\n        className=\"flex flex-wrap items-center w-2/5 gap-[2px] relative cursor-pointer\"\n        onClick={goDetail}\n      >\n        {imageCount &&\n          imageCount > 4 &&\n          images\n            ?.filter((item: {}, index: number) => indexs.some((i) => i === index))\n            ?.map((linkImage: string) => {\n              return (\n                <img\n                  key={linkImage + (Math.random() + 1).toString(36).substring(7)}\n                  src={linkImage}\n                  alt=\"error\"\n                  className=\"w-[49%] h-[120px] object-cover rounded-md\"\n                />\n              );\n            })}\n\n        <span className=\"absolute px-1 text-white bg-[rgba(0,0,0,.5)] rounded-md bottom-[8px] left-[3px]\">\n          {imageCount} ảnh\n        </span>\n        <span\n          className=\"absolute px-1 rounded-md bottom-[8px] right-[7px]\"\n          onMouseEnter={() => setIsHoverHeart(true)}\n          onMouseLeave={() => setIsHoverHeart(false)}\n        >\n          {isHoverHeart ? (\n            <RiHeartFill fontSize=\"1.5em\" color=\"red\" />\n          ) : (\n            <RiHeartLine fontSize=\"1.5em\" color=\"white\" />\n          )}\n        </span>\n      </div>\n      <div className=\"w-[60%] pl-2\">\n        <div className=\"flex justify-between\">\n          <div className=\"overflow-hidden font-medium text-red-600 \">\n            {handleStar(+star)?.length > 0 &&\n              handleStar(+star).map((element, number) => {\n                return (\n                  <span key={number + (Math.random() + 1).toString(36).substring(7)}>\n                    {element}\n                  </span>\n                );\n              })}\n            <span className=\"pl-2 \">{title}</span>\n          </div>\n          <div className=\"w-[5%]  mt-1\">\n            <BsBookmarkStarFill fontSize=\"1.5em\" color=\"orange\" />\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between gap-2 my-2\">\n          <span className=\"overflow-hidden font-bold text-green-600 flex-3 text-ellipsis whitespace-nowrap\">\n            {attributes.price}\n          </span>\n          <span className=\"flex-1\">{attributes?.acreage}</span>\n          <span className=\"overflow-hidden flex-3 text-ellipsis whitespace-nowrap\">{`${\n            address.split(',')[address.split(',').length - 2]\n          }${address.split(',')[address.split(',').length - 1]}`}</span>\n        </div>\n        <p className=\"text-gray-500 lineclamp\">\n          {description[0]} {description[1]}\n        </p>\n        <div className=\"flex items-center justify-between my-5\">\n          <div className=\"flex\">\n            <img\n              src=\"https://ss-images.saostar.vn/wp700/pc/1613810558698/Facebook-Avatar_3.png\"\n              alt=\"\"\n              className=\"w-[30px] h-[30px]\"\n            />\n            <p className=\"ml-4 overflow-hidden whitespace-nowrap text-ellipsis\">\n              {user?.name}\n            </p>\n          </div>\n          <div className=\"flex items-center justify-end\">\n            <button type=\"button\" className=\"text-white bg-blue-700 rounded-md \">\n              <span className=\"mx-2 my-1 \">Gọi {user?.phone}</span>\n            </button>\n            <button\n              className=\"ml-2 text-blue-700 bg-white border border-blue-700 rounded-md hover:text-white hover:bg-blue-700\"\n              type=\"button\"\n            >\n              <span className=\"mx-2 my-1 \">Nhắn Zalo</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ItemsNewpaper);\n",[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\actions\\post.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\services\\post.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\store\\reducers\\postReducer.ts",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\components\\PageNumber.tsx",[],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\Pagination.tsx",["236","237"],[],"D:\\Coding\\ProjectSERN\\client\\src\\containers\\Public\\DetailPost.tsx",[],[],{"ruleId":"238","severity":1,"message":"239","line":23,"column":7,"nodeType":"240","endLine":23,"endColumn":25},{"ruleId":"238","severity":1,"message":"241","line":28,"column":6,"nodeType":"242","endLine":28,"endColumn":8,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"241","line":32,"column":6,"nodeType":"242","endLine":32,"endColumn":8,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":22,"column":11,"nodeType":"247","messageId":"248","endLine":22,"endColumn":17},{"ruleId":"245","severity":1,"message":"249","line":19,"column":9,"nodeType":"247","messageId":"248","endLine":19,"endColumn":17},{"ruleId":"245","severity":1,"message":"250","line":1,"column":28,"nodeType":"247","messageId":"248","endLine":1,"endColumn":34},{"ruleId":"245","severity":1,"message":"251","line":12,"column":18,"nodeType":"247","messageId":"248","endLine":12,"endColumn":23},{"ruleId":"238","severity":1,"message":"252","line":19,"column":6,"nodeType":"242","endLine":19,"endColumn":23,"suggestions":"253"},{"ruleId":"238","severity":1,"message":"239","line":19,"column":7,"nodeType":"254","endLine":19,"endColumn":22},{"ruleId":"245","severity":1,"message":"255","line":9,"column":11,"nodeType":"247","messageId":"248","endLine":9,"endColumn":22},{"ruleId":"245","severity":1,"message":"256","line":1,"column":23,"nodeType":"247","messageId":"248","endLine":1,"endColumn":34},{"ruleId":"245","severity":1,"message":"257","line":4,"column":23,"nodeType":"247","messageId":"248","endLine":4,"endColumn":27},{"ruleId":"245","severity":1,"message":"258","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":12},{"ruleId":"245","severity":1,"message":"259","line":12,"column":18,"nodeType":"247","messageId":"248","endLine":12,"endColumn":23},{"ruleId":"238","severity":1,"message":"260","line":26,"column":6,"nodeType":"242","endLine":26,"endColumn":19,"suggestions":"261"},"react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["262"],["263"],"@typescript-eslint/no-unused-vars","'update' is assigned a value but never used.","Identifier","unusedVar","'validate' is assigned a value but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'prop.queryPage'. Either include them or remove the dependency array.",["264"],"UnaryExpression","'accessToken' is assigned a value but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","'path' is defined but never used.","'posts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'maxPage'. Either include it or remove the dependency array.",["265"],{"desc":"266","fix":"267"},{"desc":"266","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [navigate]",{"range":"273","text":"274"},{"range":"275","text":"274"},"Update the dependencies array to be: [dispatch, prop.queryPage]",{"range":"276","text":"277"},"Update the dependencies array to be: [currentPage, maxPage]",{"range":"278","text":"279"},[1052,1054],"[navigate]",[1166,1168],[665,682],"[dispatch, prop.queryPage]",[865,878],"[currentPage, maxPage]"]